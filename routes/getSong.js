const mongoose = require('mongoose');
var ObjectId = require('mongoose').Types.ObjectId;
mongoose.connect('mongodb://localhost:27017/testpacify');
const express = require('express');
const bodyParser = require('body-parser');

// create an instance of express to serve our end points
const app = express();

// we'll load up node's built in file system helper library here
// (we'll be using this later to serve our JSON files
const fs = require('fs');

// configure our express instance with some body-parser settings 
// including handling JSON data
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

const auth = require('../middlewares/token_auth')
const inc = require('../services/increment_played');
const event = require('../services/create_event');
const getArtist = require('../services/get_artist_by_song');
const getFlag = require('../services/song_flag');

/**
 * get all the available info of a song the user requested for.
 * @module getSongRoutes
 */

const getSongRoutes = (app, fs) => {
   /**
   * This function gets all the available info of the song that the user requested for.
   * @name get/Song/:songId
   * @function
   * @memberof module:getSongRoutes
   * @inner
   * @param {*} req requesting the needed info from postman as the following:
   * @param {*} _id the song's id generated by the mongoBD as requested from the postman
   * @param {string} res it shows all the available info of the song that the user requested for.
   */
    app.get('/Song/:songId', auth, (req, res) => {
        mongoose.connection.db.collection('songs',function(err, collection){
            collection.find({_id:new ObjectId(req.params.songId)}).toArray(function(err,docs){
                if (err) {
                    throw err;

                }
                flag = getFlag.songFlag(req.userId, req.params.songId)
                flag.then((result) => {
                    docs[0].flag = result
                    res.send(docs[0]);
                })
        
                inc(req.params.songId);

                artistId = getArtist.getArtistId(docs[0].artist);
                artistId.then( (id) => {
                    event('play', req.userId, id, req.params.songId);
                })
                    
            });
        });
    });
}

module.exports = getSongRoutes;